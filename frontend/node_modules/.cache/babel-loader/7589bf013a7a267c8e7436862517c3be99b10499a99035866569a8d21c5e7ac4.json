{"ast":null,"code":"var _jsxFileName = \"H:\\\\LionComposites\\\\frontend\\\\src\\\\AuthProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// В AuthProvider.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Функция для чтения токена из cookie\n  const getCookie = name => {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n  };\n\n  // Проверка аутентификации при загрузке страницы\n  useEffect(() => {\n    const token = getCookie('auth_token');\n    if (token) {\n      const username = getCookie('username');\n      setUser({\n        isAuthenticated: true,\n        username\n      });\n    }\n    setLoading(false);\n  }, []);\n\n  // Вывод имени текущего пользователя и токена в консоль\n  useEffect(() => {\n    if (user && user.isAuthenticated) {\n      console.log('Authenticated user:', user.username);\n      const token = getCookie('auth_token');\n      console.log('Token:', token);\n    } else {\n      console.log('User not authenticated');\n    }\n  }, [user]); // Этот useEffect запускается только при изменениях в user\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Ui6DLq5vMU2GgsRY6PPBrtV3hI8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","getCookie","name","value","document","cookie","parts","split","length","pop","shift","token","username","isAuthenticated","console","log","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","$RefreshReg$"],"sources":["H:/LionComposites/frontend/src/AuthProvider.js"],"sourcesContent":["// В AuthProvider.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Функция для чтения токена из cookie\r\n  const getCookie = (name) => {\r\n    const value = `; ${document.cookie}`;\r\n    const parts = value.split(`; ${name}=`);\r\n    if (parts.length === 2) return parts.pop().split(';').shift();\r\n  };\r\n\r\n  // Проверка аутентификации при загрузке страницы\r\n  useEffect(() => {\r\n    const token = getCookie('auth_token');\r\n    if (token) {\r\n      const username = getCookie('username');\r\n      setUser({ isAuthenticated: true, username });\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Вывод имени текущего пользователя и токена в консоль\r\n  useEffect(() => {\r\n    if (user && user.isAuthenticated) {\r\n      console.log('Authenticated user:', user.username);\r\n      const token = getCookie('auth_token');\r\n      console.log('Token:', token);\r\n    } else {\r\n      console.log('User not authenticated');\r\n    }\r\n  }, [user]); // Этот useEffect запускается только при изменениях в user\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMc,SAAS,GAAIC,IAAI,IAAK;IAC1B,MAAMC,KAAK,GAAI,KAAIC,QAAQ,CAACC,MAAO,EAAC;IACpC,MAAMC,KAAK,GAAGH,KAAK,CAACI,KAAK,CAAE,KAAIL,IAAK,GAAE,CAAC;IACvC,IAAII,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE,OAAOF,KAAK,CAACG,GAAG,CAAC,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC,CAACG,KAAK,CAAC,CAAC;EAC/D,CAAC;;EAED;EACAtB,SAAS,CAAC,MAAM;IACd,MAAMuB,KAAK,GAAGV,SAAS,CAAC,YAAY,CAAC;IACrC,IAAIU,KAAK,EAAE;MACT,MAAMC,QAAQ,GAAGX,SAAS,CAAC,UAAU,CAAC;MACtCH,OAAO,CAAC;QAAEe,eAAe,EAAE,IAAI;QAAED;MAAS,CAAC,CAAC;IAC9C;IACAZ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAZ,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,IAAIA,IAAI,CAACgB,eAAe,EAAE;MAChCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAElB,IAAI,CAACe,QAAQ,CAAC;MACjD,MAAMD,KAAK,GAAGV,SAAS,CAAC,YAAY,CAAC;MACrCa,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,CAAC;IAC9B,CAAC,MAAM;MACLG,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC;EACF,CAAC,EAAE,CAAClB,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ,IAAIE,OAAO,EAAE;IACX,oBAAOT,OAAA;MAAAK,QAAA,EAAK;IAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACE7B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACjB,KAAK,EAAE;MAAEN,IAAI;MAAEC;IAAQ,CAAE;IAAAH,QAAA,EAC5CA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,GAAA,CAzCWF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}