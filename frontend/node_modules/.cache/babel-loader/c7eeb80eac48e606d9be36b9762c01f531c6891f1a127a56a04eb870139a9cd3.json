{"ast":null,"code":"var _jsxFileName = \"H:\\\\LionComposites\\\\frontend\\\\src\\\\pages\\\\product_page\\\\components\\\\ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { useAuth } from '../../../AuthProvider'; // Импортируем хук useAuth\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContainer = styled.div`\n  margin-top: 20px;\n`;\n_c = FormContainer;\nconst Input = styled.input`\n  margin-bottom: 10px;\n`;\nconst TextArea = styled.textarea`\n  margin-bottom: 10px;\n`;\n_c2 = TextArea;\nconst Button = styled.button`\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n`;\n_c3 = Button;\nconst ReviewForm = ({\n  productId\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const {\n    user\n  } = useAuth(); // Получаем текущего авторизованного пользователя из контекста\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:8000/api/products/${productId}/reviews/`, {\n        content,\n        user: user.id\n      },\n      // Используем user.id для передачи id пользователя\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      // Успешно отправлено, можно добавить логику обновления отзывов, если нужно\n      setContent('');\n    } catch (error) {\n      console.error('Error submitting review:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        value: content,\n        onChange: event => setContent(event.target.value),\n        placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043E\\u0442\\u0437\\u044B\\u0432...\",\n        rows: \"4\",\n        cols: \"50\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0437\\u044B\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewForm, \"wVn8OLfbZDubMGHNU8Ty8t3Vcog=\", false, function () {\n  return [useAuth];\n});\n_c4 = ReviewForm;\nexport default ReviewForm;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"FormContainer\");\n$RefreshReg$(_c2, \"TextArea\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"ReviewForm\");","map":{"version":3,"names":["React","useState","axios","styled","useAuth","jsxDEV","_jsxDEV","FormContainer","div","_c","Input","input","TextArea","textarea","_c2","Button","button","_c3","ReviewForm","productId","_s","content","setContent","user","handleSubmit","event","preventDefault","token","localStorage","getItem","post","id","headers","Authorization","error","console","children","onSubmit","value","onChange","target","placeholder","rows","cols","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c4","$RefreshReg$"],"sources":["H:/LionComposites/frontend/src/pages/product_page/components/ReviewForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { useAuth } from '../../../AuthProvider'; // Импортируем хук useAuth\r\n\r\nconst FormContainer = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ReviewForm = ({ productId }) => {\r\n  const [content, setContent] = useState('');\r\n  const { user } = useAuth(); // Получаем текущего авторизованного пользователя из контекста\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(\r\n        `http://localhost:8000/api/products/${productId}/reviews/`,\r\n        { content, user: user.id }, // Используем user.id для передачи id пользователя\r\n        {\r\n          headers: {\r\n            Authorization: `Token ${token}`\r\n          }\r\n        }\r\n      );\r\n      // Успешно отправлено, можно добавить логику обновления отзывов, если нужно\r\n      setContent('');\r\n    } catch (error) {\r\n      console.error('Error submitting review:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextArea\r\n          value={content}\r\n          onChange={(event) => setContent(event.target.value)}\r\n          placeholder=\"Напишите ваш отзыв...\"\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          required\r\n        />\r\n        <Button type=\"submit\">Отправить отзыв</Button>\r\n      </form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ReviewForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,OAAO,QAAQ,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAI;AACjC;AACA,CAAC;AAACC,EAAA,GAFIF,aAAa;AAInB,MAAMG,KAAK,GAAGP,MAAM,CAACQ,KAAM;AAC3B;AACA,CAAC;AAED,MAAMC,QAAQ,GAAGT,MAAM,CAACU,QAAS;AACjC;AACA,CAAC;AAACC,GAAA,GAFIF,QAAQ;AAId,MAAMG,MAAM,GAAGZ,MAAM,CAACa,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,MAAM;AAQZ,MAAMG,UAAU,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM;IAAEsB;EAAK,CAAC,GAAGnB,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE5B,MAAMoB,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAM3B,KAAK,CAAC4B,IAAI,CACb,sCAAqCX,SAAU,WAAU,EAC1D;QAAEE,OAAO;QAAEE,IAAI,EAAEA,IAAI,CAACQ;MAAG,CAAC;MAAE;MAC5B;QACEC,OAAO,EAAE;UACPC,aAAa,EAAG,SAAQN,KAAM;QAChC;MACF,CACF,CAAC;MACD;MACAL,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACE5B,OAAA,CAACC,aAAa;IAAA6B,QAAA,eACZ9B,OAAA;MAAM+B,QAAQ,EAAEb,YAAa;MAAAY,QAAA,gBAC3B9B,OAAA,CAACM,QAAQ;QACP0B,KAAK,EAAEjB,OAAQ;QACfkB,QAAQ,EAAGd,KAAK,IAAKH,UAAU,CAACG,KAAK,CAACe,MAAM,CAACF,KAAK,CAAE;QACpDG,WAAW,EAAC,uGAAuB;QACnCC,IAAI,EAAC,GAAG;QACRC,IAAI,EAAC,IAAI;QACTC,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF1C,OAAA,CAACS,MAAM;QAACkC,IAAI,EAAC,QAAQ;QAAAb,QAAA,EAAC;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEpB,CAAC;AAAC5B,EAAA,CAvCIF,UAAU;EAAA,QAEGd,OAAO;AAAA;AAAA8C,GAAA,GAFpBhC,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAAT,EAAA,EAAAK,GAAA,EAAAG,GAAA,EAAAiC,GAAA;AAAAC,YAAA,CAAA1C,EAAA;AAAA0C,YAAA,CAAArC,GAAA;AAAAqC,YAAA,CAAAlC,GAAA;AAAAkC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}